---
import { type TypedOptions } from "typed.js";
import { Typed } from "./Typed";

interface Props {
  title?: string;
  description: string[] | null;
  descriptionOptions?: TypedOptions;
}

const { title = "", description = "", descriptionOptions = {} } = Astro.props;
---

<section class="container">
  <div
    class:list={[
      "flex",
      "flex-col",
      "w-auto",
      "h-fit",
      "py-20",
      "justify-center",
      "contain-content",
      "place-items-center",
      "bg-gradient-to-br",
      "rounded-b-3xl",
      "lg:grid",
      "lg:grid-cols-2",
      "lg:grid-flow-row",
      "lg:gap-8"
    ]}
  >
    <div class:list={["flex", "flex-col", "flex-auto"]}>
      <h1 class:list={["text-center", "text-blue-100", "text-6xl", "mb-8"]}>
        {title}
      </h1>
      {description && (<Typed client:only="react" strings={description} options={descriptionOptions} />)}
    </div>
    <div class:list={["flex", "flex-col", "flex-auto", "place-items-center", "gap-8"]}>
      <slot name="cta" />
      <slot />
    </div>
  </div>
</section>
